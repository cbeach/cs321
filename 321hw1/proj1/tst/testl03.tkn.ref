Code Token-image
----------------
[52] package
[52] lexer
[34] ;
[52] import
[52] java
[35] .
[52] io
[35] .
[39] *
[34] ;
[18] public
[9] class
[52] TestLexer
[31] {
[18] public
[20] static
[25] void
[16] main
[27] (
[21] String
[29] [
[30] ]
[52] args
[28] )
[31] {
[52] try
[31] {
[13] if
[27] (
[52] args
[35] .
[15] length
[44] ==
[50] 1
[28] )
[31] {
[52] FileInputStream
[52] stream
[36] =
[17] new
[52] FileInputStream
[27] (
[52] args
[29] [
[50] 0
[30] ]
[28] )
[34] ;
[52] miniLexer
[52] lexer
[36] =
[17] new
[52] miniLexer
[27] (
[52] stream
[28] )
[34] ;
[14] int
[52] cnt
[36] =
[50] 0
[34] ;
[52] Token
[52] t
[34] ;
[22] System.out.println
[27] (
[51] "Code Token-image"
[28] )
[34] ;
[22] System.out.println
[27] (
[51] "----------------"
[28] )
[34] ;
[26] while
[27] (
[27] (
[52] t
[36] =
[52] lexer
[35] .
[52] getNextToken
[27] (
[28] )
[28] )
[45] !=
[52] null
[28] )
[31] {
[52] cnt
[37] +
[37] +
[34] ;
[22] System.out.println
[27] (
[51] "["
[37] +
[52] t
[35] .
[52] kind
[37] +
[51] "] "
[37] +
[52] t
[35] .
[52] toString
[27] (
[28] )
[28] )
[34] ;
[13] if
[27] (
[52] t
[35] .
[52] kind
[44] ==
[50] 0
[28] )
[52] break
[34] ;
[32] }
[22] System.out.println
[27] (
[51] "Lexical analysis successful, total "
[37] +
[52] cnt
[37] +
[51] " tokens"
[28] )
[34] ;
[52] stream
[35] .
[52] close
[27] (
[28] )
[34] ;
[32] }
[10] else
[31] {
[52] throw
[17] new
[52] Exception
[27] (
[51] "You must provide a parameter of one file name."
[28] )
[34] ;
[32] }
[32] }
[52] catch
[27] (
[52] Exception
[52] e
[28] )
[31] {
[52] System
[35] .
[52] err
[35] .
[52] println
[27] (
[52] e
[35] .
[52] toString
[27] (
[28] )
[28] )
[34] ;
[32] }
[32] }
[32] }
[0] 
Lexical analysis successful, total 172 tokens
